# -*- coding: utf-8 -*-
"""MakeDatasetForM6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15iwAWv7Q6Fonv_TkdT_phM66wUdhVEDG
"""

import os
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from datetime import datetime
import time

import warnings
warnings.filterwarnings('ignore')

#!pip install yfinance
import yfinance as yf


tm = time.localtime(time.time())
TODAY = f"{tm.tm_year}-{tm.tm_mon:0>2d}-{tm.tm_mday:0>2d}"

def make_dataset_for_M6(start_date='2012-03-01',end_date=TODAY,path = "./stock"):
    os.makedirs(path+"/asset",exist_ok=True)

    ASSET = pd.read_csv('M6_Universe.csv')

    for asset in ASSET.symbol:
        stock = yf.download(asset, start=start_date, end = end_date)
        stock.to_csv(path+"/asset/"+asset+".csv")
    
    #나스닥 종합주가지수 
    nasdaq = yf.download("^IXIC", start=start_date)
    nasdaq.fillna(method='ffill')
    nasdaq.to_csv(path+"/NASDAQ_composite.csv")

    #나스닥 100 
    nasdaq = yf.download("^NDX", start=start_date)
    nasdaq.fillna(method='ffill')
    nasdaq.to_csv(path+"/NASDAQ_100.csv")

    return path, path+"/asset",["NASDAQ_composite.csv","NASDAQ_100.csv"]

def make_index_data(start_date='2012-03-01',end_date=TODAY) :

    def convert_datetime(dt):
        return datetime.strftime(dt, '%Y-%m-%d')
    
    sp500 = pd.Series(yf.download('ES=F', start=start_date, end = end_date)['Adj Close'], name='SP500')
    dow = pd.Series(yf.download('YM=F', start=start_date, end = end_date)['Adj Close'], name='Dow')
    nasdaq = pd.Series(yf.download('NQ=F', start=start_date, end = end_date)['Adj Close'], name='Nasdaq')
    #russell2000 = pd.Series(yf.download('RTY=F', start=start_date, end = end_date)['Adj Close'], name='Russell2000')
    oil = pd.Series(yf.download('CL=F', start=start_date, end = end_date)['Adj Close'], name='CrudeOil')
    gold = pd.Series(yf.download('GC=F', start=start_date, end = end_date)['Adj Close'], name='Gold')
    silver = pd.Series(yf.download('SI=F', start=start_date, end = end_date)['Adj Close'], name='Silver')
    eurusd = pd.Series(yf.download('EURUSD=X', start=start_date, end = end_date)['Adj Close'], name='EURUSD')

    #crypto = pd.Series(yf.download('CRO-USD', start=start_date, end = end_date)['Adj Close'], name='crypto')
    gsci = pd.Series(yf.download('GD=F', start=start_date, end = end_date)['Adj Close'], name='gsci')
    vix = pd.Series(yf.download('^VIX', start=start_date, end = end_date)['Adj Close'], name='vix')

    #indices = pd.concat([sp500, dow, nasdaq, russell2000, oil, gold, silver, eurusd, crypto, gsci, vix], axis=1)
    indices = pd.concat([sp500, dow, nasdaq, oil, gold, silver, eurusd, gsci, vix], axis=1)


    indices = indices.reset_index()
    indices['Date'] = indices['Date'].apply(convert_datetime)
    indices = indices.fillna(method='ffill')
    # indices = indices.dropna(axis=0)
    return indices
